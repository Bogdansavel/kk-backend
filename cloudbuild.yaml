steps:
  #Step 1. Build project
  - id: Build project
    #name: gradle:8.6-jdk17
    name: gradle:5.6.2-jdk8
    entrypoint: gradle
    args: ['clean','install', '-DskipTests=true']

  #Step 2. Test project
  - id: Test project
    name: gradle:5.6.2-jdk8
    entrypoint: gradle
    args: ['test']

  #Step 3. Install Cloud SQL proxy
  - id: Install Cloud Sql Auth Proxy
    name: gradle:5.6.2-jdk8
    entrypoint: gradle
    args:
      - "-c"
      - "wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy && chmod +x cloud_sql_proxy"

  #Step 4. Run migration scripts using liquibase
  - id: Run migration scripts
    name: gradle:5.6.2-jdk8
    entrypoint: gradle
    args:
      - "-c"
      - "(./cloud_sql_proxy -instances=kk-backend-418413:europe-west1:postgre-instance=tcp:localhost:5432 & sleep 2) && mvn liquibase:update -Dliquibase.url=jdbc:postgresql://$$DB_HOST/$$DB_NAME -Dliquibase.username=$$DB_USER -Dliquibase.password=$$DB_PASS"
    timeout: "150s"
    secretEnv: ['DB_PASS', 'DB_USER', 'DB_HOST', 'DB_NAME']
    waitFor: ["Install Cloud Sql Auth Proxy"]

  #Step 5. Build docker image
  - id: Build docker image
    name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', '-t', 'europe-west1-docker.pkg.dev/kk-backend-418413/gcp-project-docker-repo/gcp-project:$SHORT_SHA', '.' ]

  #Step 6. Push docker image
  - id: Push docker image
    name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', 'europe-west1-docker.pkg.dev/kk-backend-418413/gcp-project-docker-repo/gcp-project:$SHORT_SHA' ]

  #Step 7. Update Image Tag
  - id: Update Image Tag
    name: ubuntu
    args: [ 'bash','-c','sed -i "s|INIT_IMAGE_NAME|europe-west1-docker.pkg.dev/kk-backend-418413/gcp-project-docker-repo/gcp-project:$SHORT_SHA|" k8s/deployment.yaml' ]

  #Step 8. Updating Deployment
  - id: Updating Deployment
    name: gcr.io/cloud-builders/kubectl
    args: ['apply','-f','k8s/deployment.yaml']
    env:
      - CLOUDSDK_COMPUTE_ZONE=us-central1-a
      - CLOUDSDK_CONTAINER_CLUSTER=nginx-1-cluster

images: ['europe-west1-docker.pkg.dev/kk-backend-418413/gcp-project-docker-repo/gcp-project:$SHORT_SHA']
availableSecrets:
  secretManager:
    - versionName: projects/338111463629/secrets/POSTGRES_PASSWORD/versions/2
      env: 'DB_PASS'
    - versionName: projects/338111463629/secrets/POSTGRES_USERNAME/versions/1
      env: 'DB_USER'
    - versionName: projects/338111463629/secrets/POSTGRES_HOST/versions/2
      env: 'DB_HOST'
    - versionName: projects/338111463629/secrets/POSTGRES_DATABASE/versions/1
      env: 'DB_NAME'